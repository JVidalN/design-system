{"version":3,"file":"DropDown.stories-f8a12337.js","sources":["../../src/components/DropDown/DropDown.tsx","../../src/components/DropDown/mock.ts","../../src/components/DropDown/DropDown.stories.mdx"],"sourcesContent":["import { InputHTMLAttributes, useRef, useState } from \"react\";\nimport { Icon } from \"../IconComponent/Icon\";\n\ninterface SelectOptionProps {\n  label: string;\n  value: string;\n}\n\ninterface SelectOptionGroupProps {\n  [groupName: string]: SelectOptionProps[];\n}\n\nexport interface DropDownProps{\n    placeholder?: string;\n    options: SelectOptionProps[] | SelectOptionGroupProps[];\n    selectedValue: string;\n    onChange: (value: string) => void;\n    grouped?: boolean;\n    size?: 'sm' | 'md' | 'lg';\n    className?: string;\n}\n\nfunction DropDown({\n    className, \n    placeholder, \n    options, \n    size = 'md', \n    selectedValue, \n    onChange, \n    grouped=false, \n    ...props\n  }: DropDownProps\n) {\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onChange(event.target.value);\n  };\n\n  const ungroupedOptions = () => {\n    return options.map((option: any) => (\n      <option key={option.value} value={option.value}>\n        {option.label}\n      </option>\n    ))\n  }\n\n  const groupedOptions = () => {\n    return options.map((group: any) => (\n      <optgroup label={Object.keys(group)[0]} key={Object.keys(group)[0]}>\n        {(group[Object.keys(group)[0]] as SelectOptionProps[]).map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </optgroup>\n    ))\n  }\n\n  const getSizeStyle = (size:string) => {\n    let className = '';\n    switch (size) {\n      case 'sm':\n          className = 'w-[180px]';\n          return className;\n      case 'md':\n          className = 'w-[250px]';\n          return className;\n      case 'lg':\n          className = 'w-80';\n          return className;\n    }\n  }\n  \n  return (\n    <div \n      className={`\n        relative\n        h-10\n        w-full\n        rounded-md\n        text-neutral-dark-dark02\n        bg-neutral-light-light01 \n        border \n        border-neutral-dark-dark02\n        focus-within:ring-1\n        ring-brand-primary-dark\n        ${getSizeStyle(size)}\n        ${className}\n      `}\n    >\n      <select \n          ref={selectRef}\n          className='\n            block \n            appearance-none \n            bg-transparent\n            w-full \n            px-4 \n            py-2 \n            pr-8 \n            rounded\n            focus:outline-none \n            focus:shadow-outline\n          '\n          onChange={handleChange}\n          {...props}\n          defaultValue=''\n      >\n        { \n          placeholder && (\n          <option key='placeholder' value=\"\" disabled>{placeholder}</option>\n          )\n        }\n        { \n          grouped ? \n          ( groupedOptions() ) \n          : \n          ( ungroupedOptions() )\n        }\n      </select>\n\n      <div \n        className=\"\n          pointer-events-none \n          absolute \n          inset-y-0 \n          right-0 \n          flex \n          items-center \n          px-3 \n          text-neutral-dark-dark02\n      \">\n        <Icon name=\"arrowDown\" height=\"8.5\" width=\"14\" />\n      </div>\n    </div>\n  )\n}\n\nexport { DropDown };\n","const data: any = [\n  { label: 'New York', value: 'NY' },\n  { label: 'Rome', value: 'RM' },\n  { label: 'London', value: 'LDN' },\n  { label: 'Istanbul', value: 'IST' },\n  { label: 'Paris', value: 'PRS' }\n];\n\nconst group: any = [\n  {\n    'Swedish Cars': [\n      { label: 'Volvo', value: 'volvo' },\n      { label: 'Saab', value: 'saab' },\n    ]\n  },\n  { \n    'German Cars': [\n      { label: 'Mercedes', value: 'mercedes' },\n      { label: 'Audi', value: 'audi' }\n    ]\n  }\n];\n\nexport const mock = {\n    Data: data,\n    Group: group,\n}\n","import { ArgsTable, Canvas, Meta, Story } from '@storybook/addon-docs';\nimport { action } from '@storybook/addon-actions';\nimport { useState, useEffect } from 'react';\nimport { DropDown } from \"./DropDown\";\nimport { mock } from './mock';\n\n<Meta \n    title=\"Design System/Componentes/DropDown\" \n    component={DropDown} \n    args={{\n        disabled: false,\n        placeholder:'Selecione...'\n    }}\n    argTypes={{\n        size: { \n            options: ['sm','md','lg'],\n            control: {\n                type: 'inline-radio'\n            }\n        },\n        options: { \n            control: 'object',\n        },\n    }}\n/>\n\n# DropDown\n\n> O componente `DropDown` é uma lista suspensa de opções de seleção, que é exibida quando o usuário clica em um botão ou campo de seleção. \n\n## Variantes\n\n### Default\n\n<Canvas withToolbar>\n    <Story \n        name=\"Default\"\n    >\n        {\n            (args) => {\n                const [selected, setSelected] = useState('');\n                useEffect(() => {\n                    action('onChange Event')(`Valor selecionado: ${selected}`);\n                }, [selected])\n                \n                return <DropDown \n                            {...args} \n                            options={mock.Data}\n                            selectedValue={selected}\n                            onChange={setSelected}\n                        />\n            }\n        }\n    </Story>\n</Canvas>\n\n<ArgsTable story=\"Default\" />\n\n### Agrupado\n\n<Canvas withToolbar>\n    <Story \n        name=\"Group\"\n    >\n        {\n            (args) => {\n                const [selected, setSelected] = useState('');\n                useEffect(() => {\n                    action('onChange Event')(`Valor selecionado: ${selected}`);\n                }, [selected])\n                \n                return <DropDown \n                            {...args} \n                            options={mock.Group}\n                            selected={selected}\n                            onChange={setSelected}\n                            grouped\n                        />\n            }\n        }\n    </Story>\n</Canvas>\n\n<ArgsTable story=\"Group\" />\n"],"names":["DropDown","className","placeholder","options","selectedValue","onChange","props","selectRef","useRef","handleChange","__name","event","ungroupedOptions","option","_jsx","value","label","groupedOptions","group","_jsxs","size2","className2","size","Icon","data","mock","_createMdxContent","_components","Object","assign","h1","blockquote","p","code","h2","h3","_provideComponents","components","_Fragment","children","Meta","title","component","args","disabled","argTypes","control","type","Canvas","withToolbar","Story","name","selected","setSelected","useState","useEffect","action","Data","ArgsTable","story","Group","grouped","MDXContent","wrapper","MDXLayout","defaultStory","_jsx2","storyName","parameters","storySource","source","componentMeta","includeStories","mdxStoryNameToKey","docs","page","AddContext","mdxComponentAnnotations","__namedExportsOrder"],"mappings":"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"}