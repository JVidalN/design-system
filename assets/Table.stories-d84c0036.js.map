{"version":3,"file":"Table.stories-d84c0036.js","sources":["../../src/components/Table/Table.tsx","../../src/components/Table/mock.ts"],"sourcesContent":["import React, { Children, Key, ReactElement, ReactNode, useEffect, useState } from \"react\";\nimport { Icon } from \"../IconComponent/Icon\";\nimport { VoidState } from \"../VoidState/VoidState\";\n\nexport interface TableRootProps {\n    values: any[],\n    children: ReactElement | ReactElement[] | null;\n    title?: string;\n    hasTotalizer?: boolean;\n    maxHeight?: string\n}\n /** A Table exibe dados de maneira tabular e estruturada.  */ \nfunction TableRoot({\n                        title, \n                        children = null, \n                        values, \n                        hasTotalizer = false,\n                        maxHeight = '430px',\n                        ...props\n                    }: TableRootProps) \n{\n    const propertiesFromColumnChildren: any[] = [];\n\n    Children.forEach(children, (child) => {\n        if(child?.type === TableColumn)\n            propertiesFromColumnChildren.push(child?.props);\n    });\n\n    const treatingValues = (value: any) =>{\n\n        if(!propertiesFromColumnChildren){\n            return [];\n        }\n\n        return propertiesFromColumnChildren.reduce(function(acc, item) {\n            acc[item.field] = value[item.field];\n            return acc;\n        }, {});\n    };\n    \n\n    let tableData:any = [];\n    const [filteredTableData, setFilteredTableData] = useState(tableData);\n    const [search, setSearch] = useState('');\n    const [sortField, setSortField] = useState('');\n    const [order, setOrder] = useState('asc');\n    const [columnChipExpanded, setColumnChipExpanded] = useState(false);\n\n    const handleColumnChipExpanded = () => setColumnChipExpanded(prevState => !prevState);\n\n    useEffect(() => {\n        tableData = values.map(treatingValues);\n        setFilteredTableData(tableData);\n    }, [values])\n\n    useEffect(() => {\n        let filteredValues = tableData.filter((item:any) => {\n            return Object.values(item).some((value: any) => value.toString().toLowerCase().includes(search.toLowerCase()));\n        });\n        setFilteredTableData(filteredValues);\n    }, [search]);\n\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearch(event.target.value);\n    };\n      \n    const handleSorting = (sortField: string, sortOrder: string) => {\n        if (sortField) {\n            const sorted = [...filteredTableData].sort((a, b) => {\n             if (a[sortField] === null) return 1;\n             if (b[sortField] === null) return -1;\n             if (a[sortField] === null && b[sortField] === null) return 0;\n             return (\n              a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\n               numeric: true,\n              }) * (sortOrder === \"asc\" ? 1 : -1)\n             );\n            });\n            setFilteredTableData(sorted);\n        }\n    };\n\n    const handleSortingChange = (field: string) => {\n        \n        const sortOrder = field === sortField && order === \"asc\" ? \"desc\" : \"asc\";\n        setSortField(field);\n        setOrder(sortOrder);\n        handleSorting(field, sortOrder);\n    };\n\n    const creatingTableHead = (child: any, idx: number) => {\n        switch (child.type) {\n            case TableAction:\n                return (\n                    <th \n                    key={`th${idx}`}\n                        className={`\n                        bg-neutral-light-light01 \n                        ${child?.props.sortable?\"text-brand-primary-dark cursor-pointer\":\"text-neutral-dark-base\"}\n                        border \n                        border-neutral-light-light03 \n                        text-left p-[15px]\n                        h-[55px]\n                        text-sm\n                        max-w-fit\n                        `}\n                        onClick={child?.props.sortable?() => handleSortingChange(child?.props.field):undefined}\n                    >\n                        <div className=\"flex gap-2 items-center\">\n                            {child?.props.header}\n                            {\n                                child?.props.sortable && (\n                                    <Icon \n                                        name= 'sort'\n                                        width= '24px'\n                                        height= '24px'\n                                    /> \n                                )\n                            }\n                        </div>\n                    </th>\n                    )\n            case TableColumn:\n                return (\n                    <th \n                    key={`th${idx}`}\n                        className={`\n                        bg-neutral-light-light01 \n                        ${child?.props.sortable?\"text-brand-primary-dark cursor-pointer\":\"text-neutral-dark-base\"}\n                        border \n                        border-neutral-light-light03 \n                        text-left p-[15px]\n                        h-[55px]\n                        text-sm\n                        `}\n                        onClick={child?.props.sortable?() => handleSortingChange(child?.props.field):undefined}\n                    >\n                        <div className=\"flex gap-2 items-center\">\n                            {child?.props.header}\n                            {\n                                child?.props.sortable && (\n                                    <Icon \n                                        name= 'sort'\n                                        width= '24px'\n                                        height= '24px'\n                                    /> \n                                )\n                            }\n                        </div>\n                    </th>\n                    )\n        }\n    }\n\n    const returnCellElementByType = (child: any, item: any, iTd: number):ReactNode => {\n        switch (child.type) {\n            case TableAction:\n                return (\n                        <td \n                            key={`tdAction${iTd}`}\n                            className=\"\n                                bg-neutral-light-base\n                                border \n                                border-neutral-light-light03 \n                                p-[15px]\n                                text-neutral-dark-dark01\n                                text-center\n                            \"\n                        >\n                            {React.cloneElement(child, { children: child.props.children, onClick: child.props.onClick(item)})}\n                        </td>\n                    )\n            case TableColumn:\n                return (\n                        <td \n                            key={`tdColumn${iTd}`}\n                            className={`\n                                bg-neutral-light-base\n                                border \n                                border-neutral-light-light03 \n                                text-left \n                                p-[15px]\n                                text-neutral-dark-dark01\n                            `}\n                            width={child.props.maxWidth??'100px'}\n                        >\n                            {Object.values(\n                                Object.fromEntries(\n                                    Object.entries(item).filter((item)=> item[0] === child.props.field)\n                                )\n                            ).map((value: any, idx: number) => {\n                                if(child.props.chipped){\n                                    if(Array.isArray(value)){\n                                        const [first] = value;\n                                        return (\n                                            <div key={`divChipped${idx}`} className=\"flex gap-1 items-center flex-wrap\">\n                                                {\n                                                    columnChipExpanded?\n                                                    (\n                                                        value.map((innerValue, idxInner)=> (\n                                                            <div \n                                                                key={`divChippedInner${idxInner}`}\n                                                                className=\"\n                                                                    py-[2px]\n                                                                    px-2\n                                                                    h-[25px]\n                                                                    bg-brand-primary-dark/[0.15]\n                                                                    rounded-[20px]\n                                                                    flex\n                                                                    flex-col\n                                                                    items-center\n                                                                \"\n                                                            >\n                                                                {innerValue}\n                                                            </div>\n                                                        ))\n                                                    ):\n                                                    (\n                                                        <>\n                                                            <div \n                                                                className=\"\n                                                                    py-[2px]\n                                                                    px-2\n                                                                    h-[25px]\n                                                                    bg-brand-primary-dark/[0.15]\n                                                                    rounded-[20px]\n                                                                    flex\n                                                                    flex-col\n                                                                    items-center\n                                                                \"\n                                                                >\n                                                                {first}\n                                                            </div>\n                                                            <div \n                                                                className=\"\n                                                                    py-[2px]\n                                                                    px-2\n                                                                    h-[25px]\n                                                                    bg-brand-primary-dark/[0.15]\n                                                                    rounded-[20px]\n                                                                    flex\n                                                                    flex-col\n                                                                    items-center\n                                                                \"\n                                                                >\n                                                                {`+${value.length-1}`}\n                                                            </div>\n                                                        </>\n                                                    )\n                                                }\n                                                <div \n                                                    className=\"cursor-pointer\" \n                                                    onClick={handleColumnChipExpanded}\n                                                >\n                                                    <Icon \n                                                        name={columnChipExpanded?'arrowDown':'arrowUp'}\n                                                        width= '10px'\n                                                        height= '6px'\n                                                    /> \n                                                </div>\n                                            </div>\n                                        )\n                                    }\n                                    else {\n                                        return (\n                                            <div \n                                                key={`divNotChipped${idx}`}\n                                                className=\"\n                                                    py-[2px]\n                                                    px-2\n                                                    h-[25px]\n                                                    max-w-max\n                                                    bg-brand-primary-dark/[0.15]\n                                                    rounded-[20px]\n                                                    flex\n                                                    flex-col\n                                                    items-center\n                                                \"\n                                            >\n                                                {value}\n                                            </div>\n                                        );\n                                    }\n                                }\n                                return <>{value}</>;\n                            })}\n                        </td>\n                    )\n        }\n    }\n\n    const creatingTableBody = (item: object, iTr: Key | null | undefined)=>{\n        return (\n            <tr key={`tr${iTr}`}>\n                {\n                    Children.map(children, (child: any, iTd) => returnCellElementByType(child, item, iTd))\n                }\n            </tr>\n        )\n    }\n\n    const getTitle = () =>{\n        return title && \n                (\n                    <div className=\"text-lg font-roboto text-neutral-dark-base\">\n                        {title}\n                    </div>\n                )\n    }\n\n    const getSearch = () =>{\n        return Children.map(children, (child: any, idx:number) => {\n            if(child.type === TableSearch){\n                return (\n                    <div key={`search${idx}`} className=\"grow-0\">\n                        { \n                            React.cloneElement(child, {\n                                children: Children.map(child.props.children, (innerChild: any) => {\n                                    if(innerChild.type.displayName === 'InputText.Root'){\n                                        return React.cloneElement(innerChild, {\n                                            children: Children.map(innerChild.props.children, (innerChildRoot: any) => {\n                                                if(innerChildRoot.type.displayName === 'InputText.Input')\n                                                {\n                                                    return React.cloneElement(innerChildRoot, \n                                                        { \n                                                            type: 'search',\n                                                            value: search,\n                                                            onChange: handleSearchChange,\n                                                            ...innerChildRoot.props,\n                                                        }\n                                                    )\n                                                }\n                                                return innerChildRoot;\n                                            })\n                                        })\n                                    }\n                                })\n                            })\n                        }\n                    </div>\n                )\n            }\n        })     \n    }\n\n    const getRegister = () =>{\n        return Children.map(children, (child: any, idx:number) => {\n            if(child.type === TableRegister){\n                return (\n                    <div key={`register${idx}`}>\n                        {child}\n                    </div>\n                )\n            }\n        })    \n    }\n\n    const getTotalizer = () =>{\n        return hasTotalizer\n            && (\n                <div className=\"flex justify-end text-neutral-dark-dark01\">\n                {`Total: ${filteredTableData.length} ${filteredTableData.length>1?\"itens\":\"item\"}`}\n                </div>\n            )\n    }\n\n    return (\n        <div className=\"flex flex-col gap-2 w-full font-roboto text-sm\">\n            <div className=\"flex justify-between h-10 w-full gap-10 items-center\">\n                {getTitle()}\n                {getSearch()}\n                {getRegister()}\n            </div>\n            <div className={`overflow-auto h-[${maxHeight}]`}>\n            {\n                (children && values)?(\n                        <table \n                            className=\"border-collapse w-full rounded-sm\" \n                            {...props}\n                        >\n                            <thead>\n                                <tr>\n                                    {Children.map(children, creatingTableHead)}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    filteredTableData.map(creatingTableBody)\n                                }\n                            </tbody>\n                            \n                        </table>\n                    )\n                    :\n                    <div className=\"w-full h-[310px]\">\n                        <VoidState>Nenhum dado para ser exibido.</VoidState>\n                    </div>\n            }\n            </div>\n            {getTotalizer()}\n        </div>\n    )\n}\nexport interface ColumnProps {\n    header: string,\n    field: string,\n    sortable?: boolean,\n    maxWidth?: string,\n    dataType: string,\n    chipped?: boolean,\n    format?: string,\n}\n\nfunction TableColumn( props : ColumnProps) {\n    return null;\n}\n\nexport interface ActionProps {\n    children?: ReactNode;\n    onClick?: (line: any) => void;\n}\n\nfunction TableAction( {onClick, children} : ActionProps) {\n    return <button onClick={onClick}>{children}</button>;\n}\n\nexport interface SearchProps {\n    children?: ReactNode;\n}\n\nfunction TableSearch( {children} : SearchProps) {\n    return <>{children}</>;\n}\n\nexport interface RegisterProps {\n    children?: ReactNode;\n}\n\nfunction TableRegister( {children} : RegisterProps) {\n    return <>{children}</>;\n}\n\nTableRoot.displayName = 'Table.Root';\nTableColumn.displayName = 'Table.Column';\nTableAction.displayName = 'Table.Action';\nTableSearch.displayName = 'Table.Search';\nTableRegister.displayName = 'Table.Register';\n\nexport const Table =\n{ \n    Root: TableRoot,\n    Column: TableColumn,\n    Action: TableAction,\n    Search: TableSearch,\n    Register: TableRegister\n};\n","const data: any = [\n    {\n      \"index\": 0,\n      \"balance\": \"$2,915.74\",\n      \"age\": 40,\n      \"name\": \"Kirby Farmer\",\n      \"gender\": \"male\",\n      \"company\": [\"SYNKGEN\",\"KLUGGER\",\"KLUGGER\",\"KLUGGER\"],\n      \"email\": \"kirbyfarmer@synkgen.com\"\n    },\n    {\n      \"index\": 1,\n      \"balance\": \"$3,241.04\",\n      \"age\": 23,\n      \"name\": \"Moses Ball\",\n      \"gender\": \"male\",\n      \"company\": \"KLUGGER\",\n      \"email\": \"mosesball@klugger.com\"\n    },\n    {\n      \"index\": 2,\n      \"balance\": \"$3,009.26\",\n      \"age\": 34,\n      \"name\": \"Ward Carson\",\n      \"gender\": \"male\",\n      \"company\": \"XELEGYL\",\n      \"email\": \"wardcarson@xelegyl.com\"\n    },\n    {\n      \"index\": 3,\n      \"balance\": \"$2,426.23\",\n      \"age\": 24,\n      \"name\": \"Jewel Cote\",\n      \"gender\": \"female\",\n      \"company\": \"ESSENSIA\",\n      \"email\": \"jewelcote@essensia.com\"\n    },\n    {\n      \"index\": 4,\n      \"balance\": \"$3,689.03\",\n      \"age\": 31,\n      \"name\": \"Therese Ballard\",\n      \"gender\": \"female\",\n      \"company\": \"TSUNAMIA\",\n      \"email\": \"thereseballard@tsunamia.com\"\n    },\n    {\n      \"index\": 5,\n      \"balance\": \"$3,140.28\",\n      \"age\": 24,\n      \"name\": \"Sybil Mcconnell\",\n      \"gender\": \"female\",\n      \"company\": \"OVATION\",\n      \"email\": \"sybilmcconnell@ovation.com\"\n    },\n    {\n      \"index\": 6,\n      \"balance\": \"$2,277.67\",\n      \"age\": 20,\n      \"name\": \"Latisha Forbes\",\n      \"gender\": \"female\",\n      \"company\": \"ISOSURE\",\n      \"email\": \"latishaforbes@isosure.com\"\n    }\n];\n\nexport const mock = {\n    Data: data,\n}\n"],"names":["TableRoot","title","children","values","hasTotalizer","maxHeight","props","propertiesFromColumnChildren","forEach","child","type","TableColumn","push","treatingValues","value","reduce","acc","item","field","tableData","filteredTableData","setFilteredTableData","useState","search","setSearch","sortField","setSortField","order","setOrder","columnChipExpanded","setColumnChipExpanded","handleColumnChipExpanded","prevState","useEffect","map","filteredValues","filter","Object","some","toString","toLowerCase","includes","handleSearchChange","event","target","handleSorting","sortOrder","sorted","sort","a","b","localeCompare","numeric","handleSortingChange","creatingTableHead","idx","TableAction","className","sortable","onClick","undefined","header","_jsx","Icon","name","width","height","returnCellElementByType","iTd","React","cloneElement","maxWidth","fromEntries","entries","chipped","Array","isArray","first","innerValue","idxInner","_Fragment","length","creatingTableBody","iTr","Children","getTitle","getSearch","TableSearch","innerChild","displayName","innerChildRoot","onChange","getRegister","TableRegister","getTotalizer","_jsxs","VoidState","Table","Root","Column","Action","Search","Register","data","mock"],"mappings":"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"}